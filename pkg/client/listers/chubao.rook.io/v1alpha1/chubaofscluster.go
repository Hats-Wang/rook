/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/rook/rook/pkg/apis/chubao.rook.io/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ChubaoFSClusterLister helps list ChubaoFSClusters.
type ChubaoFSClusterLister interface {
	// List lists all ChubaoFSClusters in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ChubaoFSCluster, err error)
	// ChubaoFSClusters returns an object that can list and get ChubaoFSClusters.
	ChubaoFSClusters(namespace string) ChubaoFSClusterNamespaceLister
	ChubaoFSClusterListerExpansion
}

// chubaoFSClusterLister implements the ChubaoFSClusterLister interface.
type chubaoFSClusterLister struct {
	indexer cache.Indexer
}

// NewChubaoFSClusterLister returns a new ChubaoFSClusterLister.
func NewChubaoFSClusterLister(indexer cache.Indexer) ChubaoFSClusterLister {
	return &chubaoFSClusterLister{indexer: indexer}
}

// List lists all ChubaoFSClusters in the indexer.
func (s *chubaoFSClusterLister) List(selector labels.Selector) (ret []*v1alpha1.ChubaoFSCluster, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ChubaoFSCluster))
	})
	return ret, err
}

// ChubaoFSClusters returns an object that can list and get ChubaoFSClusters.
func (s *chubaoFSClusterLister) ChubaoFSClusters(namespace string) ChubaoFSClusterNamespaceLister {
	return chubaoFSClusterNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ChubaoFSClusterNamespaceLister helps list and get ChubaoFSClusters.
type ChubaoFSClusterNamespaceLister interface {
	// List lists all ChubaoFSClusters in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ChubaoFSCluster, err error)
	// Get retrieves the ChubaoFSCluster from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ChubaoFSCluster, error)
	ChubaoFSClusterNamespaceListerExpansion
}

// chubaoFSClusterNamespaceLister implements the ChubaoFSClusterNamespaceLister
// interface.
type chubaoFSClusterNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ChubaoFSClusters in the indexer for a given namespace.
func (s chubaoFSClusterNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ChubaoFSCluster, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ChubaoFSCluster))
	})
	return ret, err
}

// Get retrieves the ChubaoFSCluster from the indexer for a given namespace and name.
func (s chubaoFSClusterNamespaceLister) Get(name string) (*v1alpha1.ChubaoFSCluster, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("chubaofscluster"), name)
	}
	return obj.(*v1alpha1.ChubaoFSCluster), nil
}
